{
  "root": true,
  "noInlineConfig": true,
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "airbnb-base",
    "airbnb-typescript/base",
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "plugins": ["@typescript-eslint", "import", "prettier"],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "ignorePatterns": ["node_modules", "dist"],
  "rules": {
    "no-debugger": "off",
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "class-methods-use-this": "off",
    "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "never" }],
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "sort-imports": [
      "error",
        {
          "ignoreCase": false,
          "ignoreDeclarationSort": true, // don"t want to sort import lines, use eslint-plugin-import instead
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": [
            "none", "all", "multiple", "single"
            ],
          "allowSeparatedGroups": true
        }
      ],
    "import/extensions": "off",
    "import/prefer-default-export": "off",
    "import/no-cycle": "error",
    "no-plusplus": "off",
    "import/order": [
      "error",
        {
          "groups": [
            "builtin", // Built-in imports (come from Node.js native) go first
            "external", // <- External imports
            "internal", // <- Absolute imports
              [
                "sibling", "parent"
              ], // <- Relative imports, the sibling and parent types they can be mingled together
            "index", // <- index imports
            "unknown" // <- unknown
          ],
          "newlines-between": "always",
          "alphabetize": {
            /* sort in ascending order. Options: ["ignore", "asc", "desc"] */
            "order": "asc",
            /* ignore case. Options: [true, false] */
            "caseInsensitive": true
          }
        }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "prettier/prettier": ["error", { "endOfLine": "auto" }],
    "@typescript-eslint/no-namespace": [2, { "allowDeclarations": true }],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array"
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "explicit",
                "overrides": {
                    "constructors": "off"
                }
            }
        ],
    "max-lines-per-function": ["error", 40],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "curly": ["error", "all"],
    "@typescript-eslint/lines-between-class-members": "off",
    "no-multi-spaces": "error", // Disallow multiple spaces
    "space-in-parens": "error", // Enforce consistent spacing inside parentheses
    "no-multiple-empty-lines": "error", // Disallow multiple empty lines
    "prefer-const": "error", // Require const declarations for variables that are never reassigned after declared
    "quotes": ["error", "single", { "allowTemplateLiterals": true }],
    "semi": ["error", "always"],
    "space-infix-ops": ["error", { "int32Hint": false }], // Требовать пробелы вокруг инфиксных операторов =/+/-
    "key-spacing": ["error", { "afterColon": true }],
    "@typescript-eslint/no-unused-vars": [
      "warn", // or "error"
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "caughtErrorsIgnorePattern": "^_"
        }
    ],
    "no-underscore-dangle": ["error", { "allowAfterThis": true }],
    "no-param-reassign": ["error", { "props": false }]
  },
  "overrides": [
    {
      "files": ["*.js"],
      "extends": ["plugin:@typescript-eslint/disable-type-checked"]
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
        "alwaysTryTypes": true
      }
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".js"]
    }
  }
}
